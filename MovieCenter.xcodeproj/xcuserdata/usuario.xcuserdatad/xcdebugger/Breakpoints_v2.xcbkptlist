<?xml version="1.0" encoding="UTF-8"?>
<Bucket
   uuid = "B4FF0AB9-172D-483E-A7F7-4F710043FCF3"
   type = "1"
   version = "2.0">
   <Breakpoints>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "15020893-961B-4937-BBCB-8F8B1B99EDA4"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "MovieCenter/Views/MoviesRegionList.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "21"
            endingLineNumber = "21"
            landmarkName = "body"
            landmarkType = "24">
            <Locations>
               <Location
                  uuid = "15020893-961B-4937-BBCB-8F8B1B99EDA4 - 999ab7e7e9549f83"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI.ForEach&lt;Swift.Array&lt;MovieCenter.Movies&gt;, Swift.Int, SwiftUI.NavigationLink&lt;SwiftUI.LazyVStack&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.lineLimit(Swift.Optional&lt;Swift.Int&gt;) -&gt; some&gt;&gt;.0)&gt;&gt;, MovieCenter.MovieDetail&gt;&gt; in closure #1 () -&gt; SwiftUI.LazyHStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;MovieCenter.Movies&gt;, Swift.Int, SwiftUI.NavigationLink&lt;SwiftUI.LazyVStack&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.lineLimit(Swift.Optional&lt;Swift.Int&gt;) -&gt; some&gt;&gt;.0)&gt;&gt;, MovieCenter.MovieDetail&gt;&gt;&gt; in closure #1 (MovieCenter.Genre) -&gt; SwiftUI.LazyVStack&lt;SwiftUI.LazyHStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;MovieCenter.Movies&gt;, Swift.Int, SwiftUI.NavigationLink&lt;SwiftUI.LazyVStack&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.lineLimit(Swift.Optional&lt;Swift.Int&gt;) -&gt; some&gt;&gt;.0)&gt;&gt;, MovieCenter.MovieDetail&gt;&gt;&gt;&gt; in closure #1 () -&gt; SwiftUI.ForEach&lt;Swift.Array&lt;MovieCenter.Genre&gt;, Swift.Int, SwiftUI.LazyVStack&lt;SwiftUI.LazyHStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;MovieCenter.Movies&gt;, Swift.Int, SwiftUI.NavigationLink&lt;SwiftUI.LazyVStack&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.lineLimit(Swift.Optional&lt;Swift.Int&gt;) -&gt; some&gt;&gt;.0)&gt;&gt;, MovieCenter.MovieDetail&gt;&gt;&gt;&gt;&gt; in MovieCenter.MoviesRegionList.body.getter : some"
                  moduleName = "MovieCenter"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/usuario/Desktop/Proyectos%20Curso%20IOS/proyectoFinal/MovieCenterFinal/movie-center/MovieCenter/Views/MoviesRegionList.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "21"
                  endingLineNumber = "21"
                  offsetFromSymbolStart = "252">
               </Location>
               <Location
                  uuid = "15020893-961B-4937-BBCB-8F8B1B99EDA4 - 9e20d600204bc341"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 (MovieCenter.Movies) -&gt; SwiftUI.NavigationLink&lt;SwiftUI.LazyVStack&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.lineLimit(Swift.Optional&lt;Swift.Int&gt;) -&gt; some&gt;&gt;.0)&gt;&gt;, MovieCenter.MovieDetail&gt; in closure #1 () -&gt; SwiftUI.ForEach&lt;Swift.Array&lt;MovieCenter.Movies&gt;, Swift.Int, SwiftUI.NavigationLink&lt;SwiftUI.LazyVStack&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.lineLimit(Swift.Optional&lt;Swift.Int&gt;) -&gt; some&gt;&gt;.0)&gt;&gt;, MovieCenter.MovieDetail&gt;&gt; in closure #1 () -&gt; SwiftUI.LazyHStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;MovieCenter.Movies&gt;, Swift.Int, SwiftUI.NavigationLink&lt;SwiftUI.LazyVStack&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.lineLimit(Swift.Optional&lt;Swift.Int&gt;) -&gt; some&gt;&gt;.0)&gt;&gt;, MovieCenter.MovieDetail&gt;&gt;&gt; in closure #1 (MovieCenter.Genre) -&gt; SwiftUI.LazyVStack&lt;SwiftUI.LazyHStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;MovieCenter.Movies&gt;, Swift.Int, SwiftUI.NavigationLink&lt;SwiftUI.LazyVStack&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.lineLimit(Swift.Optional&lt;Swift.Int&gt;) -&gt; some&gt;&gt;.0)&gt;&gt;, MovieCenter.MovieDetail&gt;&gt;&gt;&gt; in closure #1 () -&gt; SwiftUI.ForEach&lt;Swift.Array&lt;MovieCenter.Genre&gt;, Swift.Int, SwiftUI.LazyVStack&lt;SwiftUI.LazyHStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;MovieCenter.Movies&gt;, Swift.Int, SwiftUI.NavigationLink&lt;SwiftUI.LazyVStack&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.lineLimit(Swift.Optional&lt;Swift.Int&gt;) -&gt; some&gt;&gt;.0)&gt;&gt;, MovieCenter.MovieDetail&gt;&gt;&gt;&gt;&gt; in MovieCenter.MoviesRegionList.body.getter : some"
                  moduleName = "MovieCenter"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/usuario/Desktop/Proyectos%20Curso%20IOS/proyectoFinal/MovieCenterFinal/movie-center/MovieCenter/Views/MoviesRegionList.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "23"
                  endingLineNumber = "23"
                  offsetFromSymbolStart = "549">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
   </Breakpoints>
</Bucket>
